spring:
  application:
    #对应config server所获取的配置文件的{application}
    name: microservice-foo
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
  cloud:
    #将Config Server也加入到消息总线中，从配置服务端刷新配置信息，
    #而不是从某一个服务客户端来刷新自己的，设置true即可
    bus:
      trace:
        enabled: true
    config:
        #ConfigServer地址，如果配置了discovery中的serviceId则不用再配置uri
        #uri: http://localhost:8066
        #ConfigServer认证账号
        username: user
        #ConfigServer认证密码
        password: password123
        #profile对应config server所获取的配置文件中的{profile}
        profile: dev
        #指定Git仓库的分支，对应config server所获取的配置文件的{label} 
        label: master
        discovery:
          #表示使用服务发现组件中的Config Server，而不自己指定Config Server的uri，默认false
          #表示开启通过服务发现组件访问Config Server的功能
          enabled: true
          #指定Config Server在服务发现中的serviceId，默认是configserver
          service-id: microservice-config-server
management:
  security:
    #关闭验证
    enabled: false
eureka:
  client:
    service-url:
      #服务注册中心的配置内容，指定服务注册中心的位置
      defaultZone: http://samphin:samphin123@localhost:8787/eureka/      