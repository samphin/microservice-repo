server:
  #服务注册中心端口号
  port: 8068
spring:
  application:
    name: microservice-config-server
  cloud:
    #将Config Server也加入到消息总线中，从配置服务端刷新配置信息，
    #    #而不是从某一个服务客户端来刷新自己的，设置true即可
    bus:
      trace:
        enabled: true
    config:
      # 配置仓库的分支
      label: master 
      server:
        git:
          #配置GitHub仓库的地址
          uri: https://github.com/samphin/microservice-config-repo
          #配置文件所在目录
          search-paths: config-server
          #设置全局clone Git仓库，启动配置中心服务端时，快速识别错误的配置源（例如：无效的Git仓库）
          clone-on-start: true
          #设置连接Git仓库时，超时时间
          timeout: 500
          #Git仓库的账号
          username: samphin
          #Git仓库的密码
          password: _HappyDream98
        #想让configServer直接返回密文本身，而并非解密之后的内容，可设置enabled=false,ConfigClient自行解密
        encrypt:
          enabled: false
eureka:
  client:
    service-url:
      #服务注册中心的配置内容，指定服务注册中心的位置
      defaultZone: http://samphin:samphin123@localhost:8787/eureka/
logging: 
  level:
    org.springframework.cloud: ERROR
    org.springframework.boot: ERROR